#include "parser.hpp"

Token Lexer::next() {
  const static Token::Kind ACC[] = {Token::_Err, Token::_Err, Token::Ident, Token::Ident, Token::Semi, Token::Lt, Token::Ident, Token::IntConst, Token::Ident, Token::LPar, Token::Mod, Token::RBrk, Token::RBrc, Token::Mul, Token::Ident, Token::Div, Token::Assign, Token::_Eps, Token::Not, Token::RPar, Token::Gt, Token::Sub, Token::LBrk, Token::Comma, Token::Add, Token::Ident, Token::IntConst, Token::Ident, Token::_Err, Token::_Err, Token::Ident, Token::LBrc, Token::Ident, Token::Ident, Token::Le, Token::Ident, Token::IntConst, Token::Ident, Token::If, Token::Ident, Token::_Err, Token::_Eps, Token::Eq, Token::_Eps, Token::Ne, Token::Ge, Token::Ident, Token::_Err, Token::Ident, Token::And, Token::Or, Token::Ident, Token::Ident, Token::Ident, Token::Int, Token::Ident, Token::_Err, Token::Ident, Token::IntConst, Token::Ident, Token::Ident, Token::Ident, Token::Ident, Token::Void, Token::Else, Token::_Eps, Token::Ident, Token::Ident, Token::Ident, Token::Const, Token::Ident, Token::Ident, Token::While, Token::Break, Token::Ident, Token::Return, Token::Ident, Token::Continue, };
  const static u8 EC[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 42, 0, 0, 0, 41, 40, 0, 39, 38, 37, 36, 35, 34, 0, 33, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 0, 30, 29, 28, 27, 0, 0, 26, 26, 26, 26, 26, 26, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 25, 0, 24, 0, 4, 0, 23, 22, 21, 20, 19, 18, 4, 17, 16, 4, 15, 14, 4, 13, 12, 4, 4, 11, 10, 9, 8, 7, 6, 5, 4, 4, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, };
  const static u8 DFA_EDGE[][45] = {{1, 12, 29, 31, 2, 2, 27, 6, 2, 2, 2, 25, 2, 2, 2, 2, 8, 2, 2, 14, 2, 3, 30, 2, 11, 22, 2, 20, 16, 5, 4, 7, 26, 15, 21, 23, 24, 13, 19, 9, 28, 10, 18, 17, 17, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 33, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 35, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 37, 32, 32, 32, 32, 38, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 39, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 43, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 46, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 48, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, }, {0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 51, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 52, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 53, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 36, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 54, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 55, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 56, 40, 40, 40, 40, 40, 40, 40, }, {41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 43, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 57, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 58, 58, 58, 58, 58, 0, 0, 58, 0, 0, 0, 0, 58, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 59, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 60, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 62, 61, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 63, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 64, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 65, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, }, {0, 0, 0, 0, 32, 32, 32, 32, 66, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 58, 58, 58, 58, 58, 58, 0, 0, 58, 0, 0, 0, 0, 58, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 67, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 68, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 69, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 70, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 71, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 72, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 73, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 74, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 75, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 76, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 77, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 0, 0, 32, 0, 0, 0, 0, 32, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, };
  u32 l = line, c = col;
  Token::Kind last_acc = Token::_Err;
  u32 state = 0, i = 0;
  while (i < string.size()) {
    u8 ch = string[i];
    u8 ec = EC[ch];
    u8 nxt = DFA_EDGE[state][ec];
    Token::Kind acc = ACC[nxt];
    if (acc != Token::_Err) { last_acc = acc; }
    state = nxt;
    if (nxt == 0) { // dead, should not eat this char
        // we are not using substr here, because it does range check and may throws exception
        std::string_view piece(string.data(), i);
        string = std::string_view(string.data() + i, string.size() - i);
        if (last_acc != Token::_Eps) {
            return Token{last_acc, piece, l, c};
          } else {
            l = line, c = col, last_acc = Token::_Err, state = 0, i = 0;
          }
      } else { // continue, eat this char
        if (ch == '\n') { ++line, col = 1; } else { ++col; }
        ++i;
      }
  }
  // end of file
  std::string_view piece(string.data(), i);
  string = "";
  return last_acc != Token::_Eps && i != 0 ? Token{last_acc, piece, l, c} : Token{Token::_Eof, "", line, col};
}

std::variant<Program, Token> Parser::parse(Lexer &lexer) {
  using StackItem = std::variant<Token, Program, std::vector<Decl>, Decl, InitList, std::vector<InitList>, Func, Block, Stmt *, std::vector<Stmt *>, Expr *, std::vector<Expr *>>;
  struct Act {
    enum : u8 { Shift, Reduce, Acc, Err } kind;
    u8 val;
  };
  const static u8 PROD[] = {0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 5, 6, 6, 7, 7, 8, 9, 9, 10, 10, 11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, };
  const static Act ACTION[][39] = {{{Act::Err, 0}, {Act::Reduce, 2}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 2}, {Act::Reduce, 2}, {Act::Reduce, 2}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Acc, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 2}, {Act::Shift, 3}, {Act::Shift, 4}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 7}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 6}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 8}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 12}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Reduce, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 0}, {Act::Reduce, 0}, {Act::Reduce, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Reduce, 1}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 1}, {Act::Reduce, 1}, {Act::Reduce, 1}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 13}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Shift, 14}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 16}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 17}, {Act::Reduce, 5}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 8}, {Act::Reduce, 8}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 6}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 18}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 20}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 20}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 20}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 20}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 25}, {Act::Reduce, 10}, {Act::Reduce, 10}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 26}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Reduce, 4}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, {Act::Reduce, 4}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 18}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 28}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 29}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 30}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 19}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 31}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 22}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 22}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 32}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 37}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 7}, {Act::Reduce, 7}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Reduce, 3}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, {Act::Reduce, 3}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 24}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 24}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 43}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 45}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 20}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 45}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 37}, {Act::Shift, 53}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Err, 0}, {Act::Reduce, 59}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 59}, {Act::Reduce, 59}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 59}, {Act::Err, 0}, {Act::Reduce, 59}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Shift, 56}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 9}, {Act::Reduce, 9}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 13}, {Act::Reduce, 13}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 13}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 71}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 72}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 23}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 23}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 73}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Reduce, 37}, {Act::Reduce, 37}, },{{Act::Err, 0}, {Act::Reduce, 17}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 17}, {Act::Reduce, 17}, {Act::Reduce, 17}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 21}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 21}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Reduce, 16}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 16}, {Act::Reduce, 16}, {Act::Reduce, 16}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Err, 0}, {Act::Reduce, 53}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 53}, {Act::Reduce, 53}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 53}, {Act::Err, 0}, {Act::Reduce, 53}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Err, 0}, {Act::Reduce, 54}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 54}, {Act::Reduce, 54}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 54}, {Act::Err, 0}, {Act::Reduce, 54}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Err, 0}, {Act::Reduce, 55}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 55}, {Act::Reduce, 55}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 55}, {Act::Err, 0}, {Act::Reduce, 55}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Shift, 75}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 12}, {Act::Reduce, 12}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 12}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 15}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 15}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 76}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 77}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 61}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Err, 0}, {Act::Reduce, 58}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 26}, {Act::Reduce, 58}, {Act::Err, 0}, {Act::Reduce, 58}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Err, 0}, {Act::Reduce, 66}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 66}, {Act::Reduce, 66}, {Act::Err, 0}, {Act::Reduce, 66}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 65}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 65}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 65}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 95}, {Act::Shift, 4}, {Act::Shift, 96}, {Act::Shift, 97}, {Act::Shift, 98}, {Act::Shift, 99}, {Act::Shift, 100}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 101}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 45}, {Act::Shift, 102}, {Act::Shift, 38}, {Act::Shift, 103}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Err, 0}, {Act::Reduce, 56}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 56}, {Act::Reduce, 56}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 56}, {Act::Err, 0}, {Act::Reduce, 56}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 37}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 11}, {Act::Reduce, 11}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 11}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 63}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 63}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 109}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 60}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 110}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 52}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 52}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 52}, {Act::Reduce, 52}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 52}, {Act::Err, 0}, {Act::Reduce, 52}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 51}, {Act::Reduce, 51}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 51}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 51}, {Act::Reduce, 51}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 51}, {Act::Err, 0}, {Act::Reduce, 51}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 49}, {Act::Reduce, 49}, {Act::Reduce, 49}, {Act::Reduce, 49}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 49}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 49}, {Act::Reduce, 49}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 49}, {Act::Err, 0}, {Act::Reduce, 49}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 50}, {Act::Reduce, 50}, {Act::Reduce, 50}, {Act::Reduce, 50}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 50}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 50}, {Act::Reduce, 50}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 50}, {Act::Err, 0}, {Act::Reduce, 50}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 45}, {Act::Reduce, 45}, {Act::Reduce, 45}, {Act::Reduce, 45}, {Act::Reduce, 45}, {Act::Reduce, 45}, {Act::Reduce, 45}, {Act::Reduce, 45}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 45}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 45}, {Act::Reduce, 45}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 45}, {Act::Err, 0}, {Act::Reduce, 45}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 46}, {Act::Reduce, 46}, {Act::Reduce, 46}, {Act::Reduce, 46}, {Act::Reduce, 46}, {Act::Reduce, 46}, {Act::Reduce, 46}, {Act::Reduce, 46}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 46}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 46}, {Act::Reduce, 46}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 46}, {Act::Err, 0}, {Act::Reduce, 46}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 47}, {Act::Reduce, 47}, {Act::Reduce, 47}, {Act::Reduce, 47}, {Act::Reduce, 47}, {Act::Reduce, 47}, {Act::Reduce, 47}, {Act::Reduce, 47}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 47}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 47}, {Act::Reduce, 47}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 47}, {Act::Err, 0}, {Act::Reduce, 47}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 48}, {Act::Reduce, 48}, {Act::Reduce, 48}, {Act::Reduce, 48}, {Act::Reduce, 48}, {Act::Reduce, 48}, {Act::Reduce, 48}, {Act::Reduce, 48}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 48}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 48}, {Act::Reduce, 48}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 48}, {Act::Err, 0}, {Act::Reduce, 48}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 40}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 40}, {Act::Reduce, 40}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 40}, {Act::Err, 0}, {Act::Reduce, 40}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 41}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 41}, {Act::Reduce, 41}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 41}, {Act::Err, 0}, {Act::Reduce, 41}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Err, 0}, {Act::Reduce, 42}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 42}, {Act::Reduce, 42}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 42}, {Act::Err, 0}, {Act::Reduce, 42}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Err, 0}, {Act::Reduce, 43}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 43}, {Act::Reduce, 43}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 43}, {Act::Err, 0}, {Act::Reduce, 43}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Err, 0}, {Act::Reduce, 44}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 44}, {Act::Reduce, 44}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 44}, {Act::Err, 0}, {Act::Reduce, 44}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 111}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 6}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 18}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 112}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 113}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 114}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 116}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 117}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 27}, {Act::Err, 0}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Reduce, 27}, {Act::Reduce, 27}, },{{Act::Err, 0}, {Act::Reduce, 18}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, {Act::Reduce, 18}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Shift, 56}, {Act::Reduce, 67}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 28}, {Act::Err, 0}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Reduce, 28}, {Act::Reduce, 28}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 29}, {Act::Err, 0}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Reduce, 29}, {Act::Reduce, 29}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Reduce, 36}, {Act::Reduce, 36}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 119}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 14}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 14}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Err, 0}, {Act::Reduce, 57}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 57}, {Act::Reduce, 57}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 57}, {Act::Err, 0}, {Act::Reduce, 57}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 64}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 64}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 64}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 35}, {Act::Err, 0}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Reduce, 35}, {Act::Reduce, 35}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 123}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 32}, {Act::Err, 0}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Reduce, 32}, {Act::Reduce, 32}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 33}, {Act::Err, 0}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Reduce, 33}, {Act::Reduce, 33}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Reduce, 58}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 124}, {Act::Err, 0}, {Act::Reduce, 58}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 26}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 26}, {Act::Err, 0}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Reduce, 26}, {Act::Reduce, 26}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Reduce, 62}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 62}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Shift, 125}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Shift, 126}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 34}, {Act::Err, 0}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Reduce, 34}, {Act::Reduce, 34}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 95}, {Act::Shift, 4}, {Act::Shift, 96}, {Act::Shift, 97}, {Act::Shift, 98}, {Act::Shift, 99}, {Act::Shift, 100}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 101}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 45}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 103}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 95}, {Act::Shift, 4}, {Act::Shift, 96}, {Act::Shift, 97}, {Act::Shift, 98}, {Act::Shift, 99}, {Act::Shift, 100}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 101}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 45}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 103}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 58}, {Act::Shift, 59}, {Act::Shift, 60}, {Act::Shift, 61}, {Act::Shift, 62}, {Act::Shift, 63}, {Act::Shift, 64}, {Act::Shift, 65}, {Act::Shift, 66}, {Act::Shift, 67}, {Act::Shift, 68}, {Act::Shift, 69}, {Act::Shift, 70}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 130}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 31}, {Act::Err, 0}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Reduce, 31}, {Act::Reduce, 31}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 131}, {Act::Err, 0}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Reduce, 39}, {Act::Reduce, 39}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 25}, {Act::Err, 0}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Reduce, 25}, {Act::Reduce, 25}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 33}, {Act::Shift, 34}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 95}, {Act::Shift, 4}, {Act::Shift, 96}, {Act::Shift, 97}, {Act::Shift, 98}, {Act::Shift, 99}, {Act::Shift, 100}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 101}, {Act::Shift, 35}, {Act::Shift, 36}, {Act::Err, 0}, {Act::Err, 0}, {Act::Shift, 45}, {Act::Err, 0}, {Act::Shift, 38}, {Act::Shift, 103}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 30}, {Act::Err, 0}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Reduce, 30}, {Act::Reduce, 30}, },{{Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 38}, {Act::Err, 0}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Err, 0}, {Act::Err, 0}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Reduce, 38}, {Act::Reduce, 38}, },};
  const static u8 GOTO[][21] = {{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 5, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 9, 10, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 19, 10, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 42, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 54, 55, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 57, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 74, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 78, 79, 80, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 81, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 87, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 89, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 90, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 91, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 93, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 94, 0, 0, 0, 0, 0, }, {0, 104, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 107, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 9, 10, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 120, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 121, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 122, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 0, 0, }, {0, 104, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 128, 0, 0, 107, 0, 0, 0, 0, 0, }, {0, 104, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 129, 0, 0, 107, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 132, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 104, 0, 0, 0, 0, 0, 0, 105, 0, 0, 0, 133, 0, 0, 107, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, }, };
  std::vector<std::pair<StackItem, u8>> stk;
  stk.emplace_back(StackItem{}, 0);
  u32 state = 0;
  Token token = lexer.next();
  while (true) {
    Act act = ACTION[state][token.kind];
    switch (act.kind) {
      case Act::Shift: {
        stk.emplace_back(token, act.val);
        state = act.val;
        token = lexer.next();
        break;
      }
      case Act::Reduce: {
        StackItem __;
        // we are confident that the value must be what we expect, so directly dereference the return value of `std::get_if`
        // we are not using `std::get`, because it performs runtime check, and throws exceptions when fails
        switch (act.val) {
          case 0: {
[[maybe_unused]] std::vector<Decl> _2(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Program _1(std::move(*std::get_if<Program>(&stk.back().first))); stk.pop_back();
for (Decl &d : _2) { d.is_glob = true; _1.glob.emplace_back(std::move(d)); } __ = std::move(_1);
break;
}
case 1: {
[[maybe_unused]] Func _2(std::move(*std::get_if<Func>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Program _1(std::move(*std::get_if<Program>(&stk.back().first))); stk.pop_back();
_1.glob.emplace_back(std::move(_2)); __ = std::move(_1);
break;
}
case 2: {
__ = Program{};
break;
}
case 3: {
[[maybe_unused]] Token _4(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Decl> _3(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
for (Decl &d : _3) { d.is_const = true; } __ = std::move(_3);
break;
}
case 4: {
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Decl> _2(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = std::move(_2);
break;
}
case 5: {
[[maybe_unused]] std::vector<Decl> _1(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
__ = std::move(_1);
break;
}
case 6: {
__ = std::vector<Decl>();
break;
}
case 7: {
[[maybe_unused]] Decl _3(std::move(*std::get_if<Decl>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Decl> _1(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
_1.push_back(std::move(_3)); __ = std::move(_1);
break;
}
case 8: {
[[maybe_unused]] Decl _1(std::move(*std::get_if<Decl>(&stk.back().first))); stk.pop_back();
__ = std::vector{std::move(_1)};
break;
}
case 9: {
[[maybe_unused]] InitList _4(std::move(*std::get_if<InitList>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Expr *> _2(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = Decl{false, false, true, _1.piece, std::move(_2), std::move(_4)};
break;
}
case 10: {
[[maybe_unused]] std::vector<Expr *> _2(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = Decl{false, false, false, _1.piece, std::move(_2), {}};
break;
}
case 11: {
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<InitList> _2(std::move(*std::get_if<std::vector<InitList>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = InitList{nullptr, std::move(_2)};
break;
}
case 12: {
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = InitList{nullptr, {}};
break;
}
case 13: {
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = InitList{_1, {}};
break;
}
case 14: {
[[maybe_unused]] InitList _3(std::move(*std::get_if<InitList>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<InitList> _1(std::move(*std::get_if<std::vector<InitList>>(&stk.back().first))); stk.pop_back();
_1.push_back(std::move(_3)); __ = std::move(_1);
break;
}
case 15: {
[[maybe_unused]] InitList _1(std::move(*std::get_if<InitList>(&stk.back().first))); stk.pop_back();
__ = std::vector{std::move(_1)};
break;
}
case 16: {
[[maybe_unused]] Block _6(std::move(*std::get_if<Block>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _5(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Decl> _4(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = Func{true, _2.piece, std::move(_4), std::move(_6)};
break;
}
case 17: {
[[maybe_unused]] Block _6(std::move(*std::get_if<Block>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _5(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Decl> _4(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = Func{false, _2.piece, std::move(_4), std::move(_6)};
break;
}
case 18: {
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Stmt *> _2(std::move(*std::get_if<std::vector<Stmt *>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = Block{Stmt::Block, std::move(_2)};
break;
}
case 19: {
[[maybe_unused]] std::vector<Decl> _1(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
__ = std::move(_1);
break;
}
case 20: {
__ = std::vector<Decl>();
break;
}
case 21: {
[[maybe_unused]] Decl _3(std::move(*std::get_if<Decl>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Decl> _1(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
_1.push_back(std::move(_3)); __ = std::move(_1);
break;
}
case 22: {
[[maybe_unused]] Decl _1(std::move(*std::get_if<Decl>(&stk.back().first))); stk.pop_back();
__ = std::vector{std::move(_1)};
break;
}
case 23: {
[[maybe_unused]] std::vector<Expr *> _3(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = Decl{false, false, false, _2.piece, std::move(_3), nullptr};
break;
}
case 24: {
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = Decl{false, false, false, _2.piece, {}, nullptr};
break;
}
case 25: {
[[maybe_unused]] Token _5(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _4(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Expr *> _2(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new Assign{Stmt::Assign, _1.piece, std::move(_2), _4};
break;
}
case 26: {
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new ExprStmt{Stmt::ExprStmt, _1};
break;
}
case 27: {
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new ExprStmt{Stmt::ExprStmt, nullptr};
break;
}
case 28: {
[[maybe_unused]] std::vector<Decl> _1(std::move(*std::get_if<std::vector<Decl>>(&stk.back().first))); stk.pop_back();
__ = new DeclStmt{Stmt::DeclStmt, std::move(_1)};
break;
}
case 29: {
[[maybe_unused]] Block _1(std::move(*std::get_if<Block>(&stk.back().first))); stk.pop_back();
__ = new Block{Stmt::Block, std::move(_1.stmts)};
break;
}
case 30: {
[[maybe_unused]] Stmt * _6(std::move(*std::get_if<Stmt *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Stmt * _5(std::move(*std::get_if<Stmt *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _4(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new If{Stmt::If, _3, _5, _6};
break;
}
case 31: {
[[maybe_unused]] Stmt * _5(std::move(*std::get_if<Stmt *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _4(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new While{Stmt::While, _3, _5};
break;
}
case 32: {
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = &Break::INSTANCE;
break;
}
case 33: {
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = &Continue::INSTANCE;
break;
}
case 34: {
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _2(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new Return{Stmt::Return, _2};
break;
}
case 35: {
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new Return{Stmt::Return, nullptr};
break;
}
case 36: {
[[maybe_unused]] Stmt * _2(std::move(*std::get_if<Stmt *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Stmt *> _1(std::move(*std::get_if<std::vector<Stmt *>>(&stk.back().first))); stk.pop_back();
_1.push_back(_2); __ = std::move(_1);
break;
}
case 37: {
__ = std::vector<Stmt *>();
break;
}
case 38: {
[[maybe_unused]] Stmt * _2(std::move(*std::get_if<Stmt *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = _2;
break;
}
case 39: {
__ = static_cast<Stmt *>(nullptr);
break;
}
case 40: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Add, 0, _1, _3};
break;
}
case 41: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Sub, 0, _1, _3};
break;
}
case 42: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Mul, 0, _1, _3};
break;
}
case 43: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Div, 0, _1, _3};
break;
}
case 44: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Mod, 0, _1, _3};
break;
}
case 45: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Lt, 0, _1, _3};
break;
}
case 46: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Le, 0, _1, _3};
break;
}
case 47: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Ge, 0, _1, _3};
break;
}
case 48: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Gt, 0, _1, _3};
break;
}
case 49: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Eq, 0, _1, _3};
break;
}
case 50: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Ne, 0, _1, _3};
break;
}
case 51: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::And, 0, _1, _3};
break;
}
case 52: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = new Binary{Expr::Or, 0, _1, _3};
break;
}
case 53: {
[[maybe_unused]] Expr * _2(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = _2;
break;
}
case 54: {
[[maybe_unused]] Expr * _2(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new Unary{Expr::Neg, 0, _2};
break;
}
case 55: {
[[maybe_unused]] Expr * _2(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new Unary{Expr::Not, 0, _2};
break;
}
case 56: {
[[maybe_unused]] Token _3(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _2(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = _2;
break;
}
case 57: {
[[maybe_unused]] Token _4(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Expr *> _3(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new Call{Expr::Call, 0, _1.piece, std::move(_3)};
break;
}
case 58: {
[[maybe_unused]] std::vector<Expr *> _2(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new Index{Expr::Index, 0, _1.piece, std::move(_2)};
break;
}
case 59: {
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = new IntConst{Expr::IntConst, 0, atoi(_1.piece.data())};
break;
}
case 60: {
[[maybe_unused]] std::vector<Expr *> _1(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
__ = std::move(_1);
break;
}
case 61: {
__ = std::vector<Expr *>();
break;
}
case 62: {
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Expr *> _1(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
_1.push_back(_3); __ = std::move(_1);
break;
}
case 63: {
[[maybe_unused]] Expr * _1(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
__ = std::vector{_1};
break;
}
case 64: {
[[maybe_unused]] Token _4(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Expr *> _1(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
_1.push_back(_3); __ = std::move(_1);
break;
}
case 65: {
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _1(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
__ = std::vector<Expr *>{nullptr};
break;
}
case 66: {
[[maybe_unused]] Token _4(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Expr * _3(std::move(*std::get_if<Expr *>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] Token _2(std::move(*std::get_if<Token>(&stk.back().first))); stk.pop_back();
[[maybe_unused]] std::vector<Expr *> _1(std::move(*std::get_if<std::vector<Expr *>>(&stk.back().first))); stk.pop_back();
_1.push_back(_3); __ = std::move(_1);
break;
}
case 67: {
__ = std::vector<Expr *>();
break;
}
case 68: {
[[maybe_unused]] Program _1(std::move(*std::get_if<Program>(&stk.back().first))); stk.pop_back();
__ = _1;
break;
}

          default:
            __builtin_unreachable();
        }
        u8 nxt = GOTO[stk.back().second][PROD[act.val]];
        stk.emplace_back(std::move(__), nxt);
        state = nxt;
        break;
      }
      case Act::Acc:
        return std::move(*std::get_if<Program>(&stk.back().first));
      case Act::Err:
        return token;
      default:
        __builtin_unreachable();
    }
  }
}